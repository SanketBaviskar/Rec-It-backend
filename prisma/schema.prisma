generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement()) // Primary key
  email        String     @unique
  password     String?
  firstName    String
  middleName   String?
  lastName     String
  role         String?   @default("0")
  status       String?
  avatar       String?
  phone        String?
  address      String?
  gender       String?
  dateOfBirth  DateTime?
  memberships   UserMembership[]
  accessId     String?     @unique
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Membership {
  id          Int     @id @default(autoincrement()) // Primary key for Membership
  name        String
  description String?
  price       Float?
  createdAt     DateTime        @default(now()) 
  updatedAt     DateTime        @updatedAt      
  userMemberships UserMembership[]
}

model UserMembership {
  id            Int             @id @default(autoincrement())
  userId        Int             // Foreign key to User
  membershipId  Int             // Foreign key to Membership
  startDate     DateTime        // When the membership started
  endDate       DateTime?       // When the membership ended (null if active)
  createdAt     DateTime        @default(now()) // Record creation timestamp
  updatedAt     DateTime        @updatedAt      // Record last update timestamp

  user          User            @relation(fields: [userId], references: [id])
  membership    Membership      @relation(fields: [membershipId], references: [id])

  @@index([userId])             // Index for quick lookups by user
  @@index([membershipId])       // Index for quick lookups by membership
  @@index([userId, membershipId]) // Compound index for efficient queries on user+membership
}